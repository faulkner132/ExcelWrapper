<?xml version="1.0" encoding="utf-8"?>
<topic id="768d034f-add7-4f8d-93f2-2db426c4c25b" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>
          ExcelWrapper is late-bound .NET object for interacting with Excel.
          It supports common tasks for manipulating Excel data without requiring a reference to interop COM components.
      </para>

    </introduction>


      <section address="Author">
          <title>Author</title>
          <content>
              <para>
                  Written and maintained by 
                  <externalLink>
                      <linkText>Jason Faulkner</linkText>
                      <linkUri>http://JasonFaulkner.com/</linkUri>
                  </externalLink>
              </para>
            <para>
              ExcelWrapper updates are available for download at
              <externalLink>
                <linkText>GitHub</linkText>
                <linkUri>https://github.com/faulkner132/ExcelWrapper</linkUri>
              </externalLink>
              and
              <externalLink>
                <linkText>via NuGet</linkText>
                <linkUri>https://www.nuget.org/packages/ExcelWrapper</linkUri>
              </externalLink>
            </para>
          </content>
      </section>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Features">
      <title>Features</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
          <list class="bullet">
              <listItem><para>Straight-forward get and set methods for values and formulas - specify by location (e.g. A1, B23, BA21, etc.) or cell row/column coordinates.</para></listItem>
              <listItem><para>Full support for creating, opening, and saving workbooks.</para></listItem>
              <listItem><para>Full support for adding, deleting, and moving worksheets.</para></listItem>
              <listItem><para>Support for common range operations such as setting borders, fonts, colors, and text formatting.</para></listItem>
              <listItem><para>Support for calling the native Excel Find function.</para></listItem>
              <listItem><para>Convenience methods for common operations (column number to letter and vice versa, formula reference builder (R1C1 format), etc.).</para></listItem>
              <listItem><para>Late-bound, so Excel interop libraries are not required to be referenced.</para></listItem>
              <listItem><para>Direct access to the underlying Excel COM objects to invoke any non-implemented functions.</para></listItem>
              <listItem><para>Implements IDisposable to prevent 'ghost' Excel instances.</para></listItem>
              <listItem><para>Full intellisense comments included.</para></listItem>
              <listItem><para>Uses .NET 2.0 (for flexibility purposes).</para></listItem>
          </list>
      </content>
      
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>

      <section address="Notes">
          <title>Important Note</title>
          <content>
              <para>While explicit references to Excel libraries are not required, this component does require that Excel is installed on any system which utilizes it. This library is not a replacement for Excel, it is a late-bound interface to the Excel COM objects.</para>
          </content>
      </section>

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
